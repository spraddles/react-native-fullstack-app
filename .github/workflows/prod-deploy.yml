name: Deploy to Prod environment

on:
  push:
    branches:
      - production

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get GCP secrets
        id: secrets
        run: |
          SECRETS=(
            "GCP_PROJECT_ID" 
            "GCP_REGION" 
            "GCP_PROJECT_NUMBER" 
            "GCP_SERVICE_ACCOUNT" 
            "GCP_WORKLOAD_IDENTITY_PROVIDER" 
            "GCP_WORKLOAD_IDENTITY_POOL"
            "GCP_ARTIFACT_REPO_NAME"
          )
          for secret in "${SECRETS[@]}"; do
            value=$(gcloud secrets versions access latest --secret=$secret)
            echo "$secret=$value" >> $GITHUB_ENV
          done

      # gcp auth
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
          workload_identity_provider: 'projects/${{ env.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.GCP_WORKLOAD_IDENTITY_POOL }}/providers/${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}'

      # docker auth
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GCP_REGION }}-docker.pkg.dev'

      # build app image
      - name: Build Docker image
        run: |
          docker build -t express -f ./docker/services/express/dockerfile .

      # tag app image
      - name: Tag Docker image
        run: |
          IMAGE_ID=$(docker images -q express)
          docker tag $IMAGE_ID ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REPO_NAME }}/express:${{ github.sha }}